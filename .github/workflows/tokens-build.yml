# Builds the tokens package to update the figma folder

name: 'Build Tokens Package'

on:
  workflow_dispatch:
  push:
    paths: ['packages/tokens/**']
    branches:
      - main

env:
  BUILD_SUCCESS: true

jobs:
  tokens-build:
    name: Build (fails by design)
    # id: tokens-build
    runs-on: ubuntu-latest
    continue-on-error: true
    # outputs:
      # figma-noDiff: steps.noDiff.outputs.test
      # figma-built: steps.built.output.test
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.VA_MOBILE_ROBOT_GITHUB_PAT }}
      - name: Use Node.js 18.x
        uses: actions/setup-node@v3
        with:
          registry-url: https://registry.npmjs.org/
          node-version-file: .nvmrc
          cache: yarn
          cache-dependency-path: yarn.lock
      - run: yarn install
      - name: Build tokens
        run: |
          yarn tokens:build
      - name: Prepare commit
        working-directory: packages/tokens
        run: |
          git config --global user.name 'VA Automation Bot'
          git config --global user.email 'va-mobileapp@adhocteam.us'
          git pull
          git add -f figma/
      - name: Check figma diff
        id: diff
        working-directory: packages/tokens
        run: | 
          echo $vars.BUILD_SUCCESS
          echo $BUILD_SUCCESS
          echo '$BUILD_SUCCESS'
          git commit --dry-run
      # - name: No changes to figma tokens
        # id: noDiff
        # if: failure() || steps.diff.conclusion == 'failure'
        # run: |
        #   echo No changes to figma tokens
        # run: |
        #   echo 'test=noDiff' >> 'No changes to figma tokens'
      - name: Commit latest figma tokens
        id: built
        if: success() && steps.diff.conclusion == 'success'
        working-directory: packages/tokens
        run: |
          exit 1
          git commit -m 'Build latest figma tokens'
          git push
          echo 'test=built' >> 'Built latest figma tokens'
      - name: Set success/fail
        if: failure() && steps.built.conclusion == 'failure'
        run: echo 'BUILD_SUCCESS=false' >> $GITHUB_ENV

  tokens-build-success:
    name: Build Process Success/Failure
    needs: tokens-build
    runs-on: ubuntu-latest
    steps:
      - name: Test output
        run: |
          echo $BUILD_SUCCESS
          echo ${{ env.BUILD_SUCCESS }}
          echo ${{ env.BUILD_SUCCESS == 'true' }}
          echo ${{ env.BUILD_SUCCESS == 'false' }}
      - name: Tokens Build Succeeded
        if: ${{ env.BUILD_SUCCESS == 'true' }}
        run: echo Great success!
      - name: Tokens Build Failure
        if: ${{ env.BUILD_SUCCESS == 'false' }}
        run: exit 1